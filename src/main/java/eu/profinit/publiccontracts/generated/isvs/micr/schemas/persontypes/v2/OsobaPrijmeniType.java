//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.04.19 at 01:50:51 AM CEST 
//


package eu.profinit.publiccontracts.generated.isvs.micr.schemas.persontypes.v2;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlType;
import eu.profinit.publiccontracts.generated.isvs.micr.schemas.corecomponenttypes.v1.TextType;


/**
 * Základní identifikace obyvatele.
 * a) Obèan ÈR.
 * Obèan má právo a povinnost užívat pøíjmení (resp. rodné pøíjmení), kterým je zapsán v matrice.
 * V pøípadì zmìny pøíjmení je podkladem výpis z matriky (poslední zapsané pøíjmení) nebo úøední doklad o zmìnì pøíjmení.
 * b) Cizinec.
 * Je to osoba, která nemá státní obèanství ÈR.
 * Jestliže má vydán prùkaz povolení k pobytu, zapíše se pøíjmení podle tohoto prùkazu.
 * Jestliže lze jednoznaènì identifikovat pøíjmení cizince, zapíše se toto pøíjmení.
 * Jestliže se jmenný identifikaèní údaj cizince skládá z jednotlivých jmen (která jsou si pøípadnì rovnocenná a jejichž poøadí není pevnì stanoveno – napø. „Alvarez y Carrion“ nebo „Carrion y Alvarez“), pak se zapíše tolik jmen, kolik jich lze umístit do prostoru 35 znakù bez krácení. Pøitom se zachovává poøadí jmen podle pøedloženého dokladu a jednotlivá jména jsou oddìlena vždy jednou mezerou, popø. pomlèkou, je-li to tak v dokladu totožnosti cizince zapsáno. Jestliže je pøíjmení cizince jediné slovo delší než 35 znakù, zkrátí se na délku 35 znakù vynecháním 36. a dalších znakù. Pøi pøepisu jména cizince z cizího jazyka nepoužívajícího latinku do èeštiny se používá transliterace.
 * 
 * <p>Java class for OsobaPrijmeniType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="OsobaPrijmeniType">
 *   &lt;simpleContent>
 *     &lt;restriction base="&lt;urn:cz:isvs:micr:schemas:CoreComponentTypes:v1>TextType">
 *       &lt;attribute name="kvalifikator" type="{urn:cz:isvs:micr:schemas:PersonTypes:v2}osobaPrijmeniDruhKodType" />
 *     &lt;/restriction>
 *   &lt;/simpleContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "OsobaPrijmeniType")
public class OsobaPrijmeniType
    extends TextType
{


}
